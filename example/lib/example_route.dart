// GENERATED CODE - DO NOT MODIFY MANUALLY
// **************************************************************************
// Auto generated by https://github.com/fluttercandies/ff_annotation_route
// **************************************************************************

import 'package:flutter/widgets.dart';

import 'package:flutter_candies_demo_library/flutter_candies_demo_library_route.dart';
import 'package:module_a/module_a_route.dart';
import 'src/main_page.dart';
import 'src/test_page_a.dart';
import 'src/test_page_b.dart';

// ignore_for_file: argument_type_not_assignable
RouteResult getRouteResult({String name, Map<String, dynamic> arguments}) {
  switch (name) {
    case 'fluttercandies://mainpage':
      return RouteResult(
        widget: MainPage(),
        routeName: 'MainPage',
      );
    case 'fluttercandies://picswiper':
      return RouteResult(
        widget: PicSwiper(
          index: arguments['index'],
          pics: arguments['pics'],
          tuChongItem: arguments['tuChongItem'],
        ),
        showStatusBar: false,
        routeName: 'PicSwiper',
        pageRouteType: PageRouteType.transparent,
      );
    case 'fluttercandies://testPageA':
      return RouteResult(
        widget: TestPageA(),
        routeName: 'testPageA',
        description: 'This is test page A.',
      );
    case 'fluttercandies://testPageB':
      return RouteResult(
        widget: TestPageB(
          argument: arguments['argument'],
        ),
        routeName: 'testPageB',
        description: 'This is test page B.',
      );
    case 'fluttercandies://testPageC':
      return RouteResult(
        widget: TestPageC(),
        routeName: 'testPageC',
        description: 'This is test page c in other module.',
      );
    default:
      return const RouteResult();
  }
}

class RouteResult {
  const RouteResult({
    this.widget,
    this.showStatusBar = true,
    this.routeName = '',
    this.pageRouteType,
    this.description = '',
  });

  /// The Widget return base on route
  final Widget widget;

  /// Whether show this route with status bar.
  final bool showStatusBar;

  /// The route name to track page
  final String routeName;

  /// The type of page route
  final PageRouteType pageRouteType;

  /// The description of route
  final String description;
}

enum PageRouteType { material, cupertino, transparent }

const List<String> routeNames = <String>[
  'fluttercandies://mainpage',
  'fluttercandies://picswiper',
  'fluttercandies://testPageA',
  'fluttercandies://testPageB',
  'fluttercandies://testPageC'
];

class Routes {
  const Routes._();

  /// MainPage
  ///
  /// [name] : fluttercandies://mainpage
  /// [routeName] : MainPage
  static const String FLUTTERCANDIES_MAINPAGE = 'fluttercandies://mainpage';

  /// PicSwiper
  ///
  /// [name] : fluttercandies://picswiper
  /// [routeName] : PicSwiper
  /// [arguments] : [index, pics, tuChongItem]
  /// [showStatusBar] : false
  /// [pageRouteType] : PageRouteType.transparent
  static const String FLUTTERCANDIES_PICSWIPER = 'fluttercandies://picswiper';

  /// "This is test page A."
  ///
  /// [name] : fluttercandies://testPageA
  /// [routeName] : testPageA
  /// [description] : "This is test page A."
  static const String FLUTTERCANDIES_TESTPAGEA = 'fluttercandies://testPageA';

  /// "This is test page B."
  ///
  /// [name] : fluttercandies://testPageB
  /// [routeName] : testPageB
  /// [description] : "This is test page B."
  /// [arguments] : [argument]
  static const String FLUTTERCANDIES_TESTPAGEB = 'fluttercandies://testPageB';

  /// "This is test page c in other module."
  ///
  /// [name] : fluttercandies://testPageC
  /// [routeName] : testPageC
  /// [description] : "This is test page c in other module."
  static const String FLUTTERCANDIES_TESTPAGEC = 'fluttercandies://testPageC';
}
